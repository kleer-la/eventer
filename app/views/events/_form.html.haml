- @event.errors.full_messages.each do |msg|
  .alert.alert-error
    %a.close{ "data-dismiss" => :alert, :href => "#" } &times;
    =msg

.row-fluid
  .span12.box
    .box-header.red-background
      .title
        .icon-edit
          = @event.event_type.nil? ? "Nuevo Evento" : @event.event_type.name
    .box-content
      = form_for @event do |f|
        %fieldset.inputs
          .row-fluid
            .span12
              .control-group
                %label.control-label{ :for => :event_type_id } Tipo de Evento
                = f.collection_select :event_type_id, EventType.find(:all).sort{|p1,p2| p1.name <=> p2.name}, :id, :name, {include_blank: 'Selecciona uno...'}
          .row-fluid
            .span2
              .control-group
                %label.control-label{ :for => :date }= t("formtastic.labels.event.date")
                = f.text_field :date, :class => 'datepicker-class input-small'
            .span2
              .control-group
                %label.control-label{ :for => :duration }= t("formtastic.labels.event.duration")
                = f.text_field :duration, :class => "input-mini"
            .span2
              .control-group
                %label.control-label{ :for => :capacity }= t("formtastic.labels.event.capacity")
                = f.text_field :capacity, :class => "input-mini"
            .span2
              .control-group
                %label.control-label{ :for => :is_webinar }= t("formtastic.labels.event.is_webinar")
                = f.check_box :is_webinar
            .span4
              .control-group#event_time_zone_name_input
                %label.control-label{ :for => :time_zone_name }= t("formtastic.labels.event.time_zone_name")
                = f.collection_select :time_zone_name, @timezones, :name, :to_s, {include_blank: 'Selecciona una...'}
          .row-fluid
            .span12
              .control-group
                %label.control-label= t("formtastic.labels.event.horario")
                = "De " 
                = f.time_select :start_time, {:minute_step => 15}, :style => "width:50px"
                = " a " 
                = f.time_select :end_time, {:minute_step => 15}, :style => "width:50px"
          .row-fuid
            .span3
              .control-group
                %label.control-label{ :for => :place }= t("formtastic.labels.event.place")
                = f.text_field :place, :class => "span-3"
            .span3
              .control-group
                %label.control-label{ :for => :address }= t("formtastic.labels.event.address")
                = f.text_field :address, :class => "span-3"
            .span3
              .control-group
                %label.control-label{ :for => :country_id }= t("formtastic.labels.event.city")
                = f.text_field :city, :class => "span-3"
            .span3
              .control-group
                %label.control-label{ :for => :country_id }= t("formtastic.labels.event.country")
                = f.collection_select :country_id, Country.find(:all), :id, :name, :input_html => { :style => "width: 200px" }
          .row-fuid
            .span12
              .control-group
                %label.control-label{ :for => :trainer_id }= t("formtastic.labels.event.trainer")
                #trainer_select
                  = render :partial => 'trainers_select'
          .row-fuid
            .span12
              .control-group
                %label.control-label{ :for => :visibility_type }= t("formtastic.labels.event.visibility_type")
                .controls
                  %label.checkbox.inline
                    = f.radio_button :visibility_type, "pu"
                    %span.label.label-success= t('event.type.public')
                  %label.checkbox.inline
                    = f.radio_button :visibility_type, "pr"
                    %span.label.label-important= t('event.type.private')
                  %label.checkbox.inline
                    = f.radio_button :visibility_type, "co"
                    %span.label.label-info= t('event.type.community')
          .row-fuid#event_public_or_private_set
            .span2
              .control-group
                %label.control-label{ :for => :list_price }= t("formtastic.labels.event.list_price")
                = f.text_field :list_price, :class => "input-mini"
            .span2
              .control-group
                %label.control-label{ :for => :list_price_plus_tax }= t("formtastic.labels.event.list_price_plus_tax")
                = f.check_box :list_price_plus_tax
            .span8
              .row-fuid
                .span3
                  .control-group
                    %label.control-label{ :for => :list_price_2_pax_discount }= t("formtastic.labels.event.list_price_2_pax_discount")
                    = f.text_field :list_price_2_pax_discount, :class => "input-mini"
                .span3
                  .control-group
                    %label.control-label{ :for => :list_price_3plus_pax_discount }= t("formtastic.labels.event.list_price_3plus_pax_discount")
                    = f.text_field :list_price_3plus_pax_discount, :class => "input-mini"
                .span3
                  .control-group
                    %label.control-label{ :for => :eb_price }= t("formtastic.labels.event.eb_price")
                    = f.text_field :eb_price, :class => "input-mini"
                .span3
                  .control-group
                    %label.control-label{ :for => :eb_end_date }= t("formtastic.labels.event.eb_end_date")
                    = f.text_field :eb_end_date, :class => 'datepicker-class input-small'
            .span12
              .control-group
                %label.control-label{ :for => :currency_iso_code}= t("formtastic.labels.event.currency_iso_code")
                = f.collection_select :currency_iso_code, @currencies.collect{ |c| [ c[1][:iso_code]+" - "+c[1][:name], c[1][:iso_code]] }, :last, :first
          .row-fuid
            .span12
              .control-group
                %label.control-label{ :for => :registration_link }= t("formtastic.labels.event.registration_link")
                = f.text_field :registration_link, :class => 'input-block-level', :placeholder => t("formtastic.hints.event.registration_link")
          .row-fuid
            .span3
              .control-group
                %label.control-label{ :for => :sepyme_enabled }= t("formtastic.labels.event.sepyme_enabled")
                = f.check_box :sepyme_enabled
            .span3
              .control-group
                %label.control-label{ :for => :is_sold_out }= t("formtastic.labels.event.is_sold_out")
                = f.check_box :is_sold_out
            .span3
              .control-group
                %label.control-label{ :for => :draft }= t("formtastic.labels.event.draft")
                = f.check_box :draft
            .span3
              .control-group
                %label.control-label{ :for => :cancelled }= t("formtastic.labels.event.cancelled")
                = f.check_box :cancelled
          .row-fuid
            .span12
              .form-actions
                .text-right
                  %button.btn.btn-primary.btn-large{:id => "guardar", :name => "commit", :type => "submit"}
                    %i.icon-save
                    Guardar
                  %a.btn.btn-large{ :href => events_path }
                    %i.icon-undo
                    Cancelar

:javascript

  $event_country_id_before_webinar = "";
  $event_city_before_webinar = "";
  $event_place_before_webinar = "";
  $event_address_before_webinar = "";

  //bkLib.onDomLoaded(function() { nicEditors.allTextAreas() });

  $(document).ready(function() {
	
    $('input.datepicker-class').datepicker( { dateFormat: 'dd-mm-yy' } );
	
    $("#event_visibility_type_pu").change( function() { eventTypeActions( $(this).val() ); });
    $("#event_visibility_type_pr").change( function() { eventTypeActions( $(this).val() ); });
    $("#event_visibility_type_co").change( function() { eventTypeActions( $(this).val() ); });
    $("#event_event_type_id").change( function() { dynamicallyFillTrainersForEventType( $(this).val() ); });

    $("#event_date").change( function() { eventDateChanged( $(this).val() ); });

    $("#event_is_webinar").change( function() { eventWebinarToggle(); });
    $("#event_time_zone_name").change( function() { eventTimeZoneToggle(); });
    $("#event_time_zone_name_input").hide();
    eventWebinarCheck();

    if ( $("#event_visibility_type_pr").is(":checked") ) {
      $("#event_visibility_type_pr").trigger('change');
    } 
    else if ( $("#event_visibility_type_co").is(":checked") ) {
      $("#event_visibility_type_co").trigger('change');
    }

  })

  function eventTypeActions( value ) {
    if (value === "pu") {
      $("#event_list_price_2_pax_discount").removeAttr('disabled');
      $("#event_list_price_3plus_pax_discount").removeAttr('disabled');
      $("#event_eb_price").removeAttr('disabled');
      $("#event_eb_end_date").removeAttr('disabled');
      $("#event_public_or_private_set").show();
    }
    else if (value === "co") {
      $("#event_list_price_2_pax_discount").val("");
      $("#event_list_price_3plus_pax_discount").val("");
      $("#event_list_price").val( 0 );
      $("#event_public_or_private_set").hide();
    }
    else if (value === "pr") {
      $("#event_list_price_2_pax_discount").val("");
      $("#event_list_price_3plus_pax_discount").val("");
      $("#event_list_price_2_pax_discount").attr('disabled','disabled');
      $("#event_list_price_3plus_pax_discount").attr('disabled','disabled');
      $("#event_eb_price").attr('disabled','disabled');
      $("#event_eb_end_date").attr('disabled','disabled');
      $("#event_public_or_private_set").show();
    }
  }

  function eventDateChanged( value ) {
    var date_string = value.substr(6,4) + "-" + value.substr(3,2) + "-" + value.substr(0,2);   

    var event_date = new Date( date_string );
    
    var eb_date = new Date( date_string );
    eb_date.setDate( event_date.getUTCDate()-10 );

    var eb_date_day = eb_date.getDate();
    var eb_date_month = eb_date.getMonth()+1;
    var eb_date_year = eb_date.getFullYear();

    if (eb_date_day<10) eb_date_day = "0"+eb_date_day;
    if (eb_date_month<10) eb_date_month = "0"+eb_date_month;

    var eb_new_date = eb_date_day + "-" + eb_date_month + "-" + eb_date_year;
    $("#event_eb_end_date").val( eb_new_date );

  }

  function eventWebinarToggle() {
     if ( $("#event_is_webinar").is(":checked") ) {
         eventWebinarConfigure();
     } else {
         $("#event_city").val( $event_city_before_webinar );
         $("#event_city").removeAttr('readonly');

         $("#event_country_id").val( $event_country_id_before_webinar );

         $("#event_place").val( $event_place_before_webinar );
         $("#event_place").removeAttr('readonly');

         $("#event_address").val( $event_address_before_webinar );
         $("#event_address").removeAttr('readonly');

         $("#event_time_zone_name").val( "" );
         $("#event_time_zone_name_input").hide();
     }
  }

  function eventWebinarCheck() {
     if ( $("#event_is_webinar").is(":checked") ) {
         eventWebinarConfigure();
     }
  }

  function eventWebinarConfigure() {
     if ( $("#event_is_webinar").is(":checked") ) {
         $event_city_before_webinar = $("#event_city").val();
         $("#event_city").val( "Webinar" );
         $("#event_city").attr('readonly','readonly');

         $event_address_before_webinar = $("#event_address").val();
         $("#event_address").val( "Webinar" );
         $("#event_address").attr('readonly','readonly');

         $event_country_id_before_webinar = $("#event_country_id").val();
         $("#event_country_id option:contains('-- OnLine --')").attr('selected', true);
         $("#event_time_zone_name_input").show();

     }
  }

  function eventTimeZoneToggle() {
    $("#event_place").val( $("#event_time_zone_name option:selected").text() );
  }

  function dynamicallyFillTrainersForEventType( eventTypeID ) {
    if(eventTypeID == "") eventTypeID="0";
    jQuery.get('/events/update_trainer_select/' + eventTypeID, function(data) {
        $("#trainer_select").html(data);
    })
    return false;
  }